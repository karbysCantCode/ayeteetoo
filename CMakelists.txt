cmake_minimum_required(VERSION "3.20.0")



find_package(OpenGL REQUIRED)



project(main)



#add cpps to exe
file(GLOB SOURCE_FILES CONFIGURE_DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/Source/Source/*.cpp")

file(GLOB_RECURSE IMGUI_SOURCE_FILES CONFIGURE_DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/Source/HeaderLibraries/ImGui/*.cpp")

set(ALL_SOURCE_FILES ${IMGUI_SOURCE_FILES} ${SOURCE_FILES})

add_executable(main ${ALL_SOURCE_FILES})



#shader dir macro
target_compile_definitions(main PUBLIC SHADERS="${CMAKE_CURRENT_SOURCE_DIR}/Resources/Shaders/") # DEVELOPMENT
#target_compile_definitions(main PUBLIC SHADERS="./Resources/Shaders/") # RELEASE



#compile uhh libraries
add_subdirectory("${CMAKE_CURRENT_SOURCE_DIR}/CompiledLibraries/glfw-3.4" "${CMAKE_CURRENT_SOURCE_DIR}/CompiledLibraries/glfw-3.4/lib") 
add_subdirectory("${CMAKE_CURRENT_SOURCE_DIR}/Source/HeaderLibraries/glm") 
add_subdirectory("${CMAKE_CURRENT_SOURCE_DIR}/CompiledLibraries/glew-2.1.0/build/cmake" "${CMAKE_CURRENT_SOURCE_DIR}/CompiledLibraries/glew-2.1.0/lib")

add_definitions(-DGLEW_STATIC)



target_include_directories(main PUBLIC 
    #diy headers
	"${CMAKE_CURRENT_SOURCE_DIR}/Source/Source",

    #libraries headers
    "${CMAKE_CURRENT_SOURCE_DIR}/Source/HeaderLibraries/",
    "${CMAKE_CURRENT_SOURCE_DIR}/CompiledLibraries/glew-2.1.0/include/",
    "${CMAKE_CURRENT_SOURCE_DIR}/CompiledLibraries/glfw-3.4/include/"
)


#target_link_directories(main PRIVATE 

#)

target_link_libraries(main PRIVATE 
    glfw
    glew
    opengl32
)